#!/usr/bin/perl
use warnings;
use strict;

BEGIN {
	if ($ENV{DEBUG_LIBS}) {
		unshift(@INC, "$ENV{HOME}/git/perl-transit-gtfs/Transit-MapMaker/lib");
		unshift(@INC, "$ENV{HOME}/git/perl-transit-gtfs/Transit-GTFS/lib");
	}
}

use Carp qw(verbose);

use Transit::GTFS;
use Transit::MapMaker;
BEGIN { $Transit::GTFS::verbose = 1; }
BEGIN { $Transit::MapMaker::verbose = 1; }
use Getopt::Long;
use YAML;

my $shell = My::Shell->new();
Getopt::Long::Configure("bundling", "gnu_compat");
Getopt::Long::GetOptions("h|help" => sub { $shell->cmd__help(); exit(0); });
$shell->run(@ARGV);

package My::Shell;
use List::MoreUtils qw(firstidx);
sub new {
	my $class = shift();
	my $self = bless({}, $class);
	return $self;
}
sub cmd__help {
	my ($self) = @_;
	print(<<"END");
usage:
	$0 list-maps
	$0 FILENAME COMMAND [ \; COMMAND ... ]
where COMMAND is one of:
	openstreetmap-update
	force-openstreetmap-update
	gtfs-update
	force-gtfs-update
	gtfs-repopulate-database
	force-gtfs-repopulate-database
	draw-openstreetmap-maps
	draw-transit-routes
END
}
sub run {
	my ($self, @args) = @_;
	my @next;
	my $semicolon = firstidx { $_ eq ";" } @args;
	if ($semicolon != -1) {
		splice(@args, $semicolon, 1);
		@next = splice(@args, $semicolon);
	}
	my $command = shift(@args);
	if ($command =~ /\./) {	# is a filename
		unshift(@args, $command);
		$command = "map";
	}
	die("no command specified; type '$0 help' for help.\n") unless defined $command;
	my $method = $self->find_method($command);
	die("no such command: '$command'; type '$0 help' for help.\n") unless $method;
	$self->$method(@args);

	if (@next) {
		$self->run(@next);
	}
}
sub find_method {
	my ($self, $command, $prefix) = @_;
	$command =~ s{-}{_}g;
	my $method_name = "cmd__" . $command;
	if (defined $prefix) {
		$method_name = "cmd_" . $prefix . "__" . $command;
	}
	return $self->can($method_name);
}
sub load_map_info {
	my ($self) = @_;
	return if $self->{maps};
	my $maps = YAML::LoadFile("maps.yaml");
	if (!$maps) {
		die("No maps.yaml data.\n");
	}
	$self->{maps} = $maps;
}
sub cmd__list_maps {
	my ($self) = @_;
	$self->load_map_info();
	foreach (sort { $a cmp $b } keys(%{$self->{maps}})) {
		print("$_\n");
	}
}
sub cmd__map {
	my ($self, $mapname, $subcommand, @args) = @_;
	die("no map name specified\n") unless defined $mapname;
	die("no subcommand specified\n") unless defined $subcommand;
	my $method = $self->find_method($subcommand);
	die("no such command: '$subcommand'\n") unless $method;
	$self->load_map_info();
	my $mapinfo = $self->{maps}->{$mapname};
	if (!$mapinfo) {
		die("no such map: '$mapname'\n");
	}
	my $mapmaker = Transit::MapMaker->new(filename => $mapname, %$mapinfo);
	$self->{mapmaker} = $mapmaker;
	$self->$method(@args);
}
sub cmd__gtfs_update {
	my ($self) = @_;
	my $mm = $self->{mapmaker};
	die("map MAPNAME must be specified.\n") unless $mm;
	my $gtfs = $mm->gtfs();
	if (!$mm->gtfs()) {
		die("map contains no transit data.\n");
	}
	$gtfs->update();
	$gtfs->repopulate();
}
sub cmd__force_gtfs_update {
	my ($self) = @_;
	my $mm = $self->{mapmaker};
	die("map MAPNAME must be specified.\n") unless $mm;
	my $gtfs = $mm->gtfs();
	if (!$mm->gtfs()) {
		die("map contains no transit data.\n");
	}
	$gtfs->force_update();
	$gtfs->force_repopulate();
}

sub cmd__osm_update {
	goto *cmd__openstreetmap_update;
}
sub cmd__openstreetmap_update {
	my ($self) = @_;
	my $mm = $self->{mapmaker};
	die("map MAPNAME must be specified.\n") unless $mm;
	$mm->update_openstreetmap();
}
sub cmd__force_osm_update {
	goto *cmd__force_openstreetmap_update;
}
sub cmd__force_openstreetmap_update {
	my ($self) = @_;
	my $mm = $self->{mapmaker};
	die("map MAPNAME must be specified.\n") unless $mm;
	$mm->force_update_openstreetmap();
}

sub cmd__gtfs_repopulate_database {
	my ($self) = @_;
	my $mm = $self->{mapmaker};
	die("map MAPNAME must be specified.\n") unless $mm;
	my $gtfs = $mm->gtfs();
	if (!$mm->gtfs()) {
		die("map contains no transit data.\n");
	}
	$gtfs->repopulate();
}
sub cmd__force_gtfs_repopulate_database {
	my ($self) = @_;
	my $mm = $self->{mapmaker};
	die("map MAPNAME must be specified.\n") unless $mm;
	my $gtfs = $mm->gtfs();
	if (!$mm->gtfs()) {
		die("map contains no transit data.\n");
	}
	$gtfs->force_repopulate();
}

sub cmd__draw_openstreetmap_maps {
	my ($self) = @_;
	my $mm = $self->{mapmaker};
	die("map MAPNAME must be specified.\n") unless $mm;
	$mm->update_openstreetmap();
	$mm->plot_openstreetmap_maps();
}

sub cmd__draw_transit_routes {
	my ($self, @routes) = @_;
	my $mm = $self->{mapmaker};
	die("map MAPNAME must be specified.\n") unless $mm;
	my $gtfs = $mm->gtfs();
	if (!$mm->gtfs()) {
		die("map contains no transit data.\n");
	}
	$mm->plot_transit_routes(@routes);
}

sub cmd__draw_transit_stops {
	my ($self) = @_;
	my $mm = $self->{mapmaker};
	die("map MAPNAME must be specified.\n") unless $mm;
	my $gtfs = $mm->gtfs();
	if (!$mm->gtfs()) {
		die("map contains no transit data.\n");
	}
	$mm->plot_transit_stops();
}

